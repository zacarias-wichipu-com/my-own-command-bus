#!/usr/bin/env php
<?php

require_once dirname(__DIR__) . '/vendor/autoload.php';

use App\Application\DisplayAwakeMessageCommand;
use App\Application\DisplayAwakeMessageCommandHandler;
use App\Application\DisplayEmojiTimeCommandHandler;
use App\Application\DisplaySleepMessageCommand;
use App\Application\DisplaySleepMessageCommandHandler;
use App\Application\DisplayTimeCommand;
use App\Application\PlayAlarmCommand;
use App\Application\PlayAlarmCommandHandler;
use App\Application\PlayAlarmWhenAwakeHourHasReached;
use App\Application\PlayBeepCommand;
use App\Application\PlayBeepCommandHandler;
use App\Application\PlayBeepWhenDotHourHasReached;
use App\Application\ShowDisplayTimeWhenDotHourHasReached;
use App\Domain\Event\AwakeHourReachedDomainEvent;
use App\Domain\Event\DotHourReachedDomainEvent;
use App\Infrastructure\Bus\CommandBus;
use App\Infrastructure\Bus\CommandHandlerDriver;
use App\Infrastructure\Bus\DomainEventBus;
use App\Infrastructure\Bus\DomainEventHandlerDriver;
use App\Infrastructure\EntryPoint\RunClock;
use App\Infrastructure\Internationalisation\EnglishDisplayMessage;
use App\Infrastructure\Middleware\AlarmLogMiddleware;
use App\Infrastructure\Middleware\CommandLoggerMiddleware;

// Configure command bus
$commandHandlerDriver = new CommandHandlerDriver();
$commandHandlerDriver->registerCommands(
    commandFqn: DisplayTimeCommand::class,
    commandHandler: new DisplayEmojiTimeCommandHandler()
);
$commandHandlerDriver->registerCommands(
    commandFqn: DisplayAwakeMessageCommand::class,
    commandHandler: new DisplayAwakeMessageCommandHandler(new EnglishDisplayMessage())
);
$commandHandlerDriver->registerCommands(
    commandFqn: DisplaySleepMessageCommand::class,
    commandHandler: new DisplaySleepMessageCommandHandler(new EnglishDisplayMessage())
);
$commandHandlerDriver->registerCommands(
    commandFqn: PlayBeepCommand::class,
    commandHandler: new PlayBeepCommandHandler()
);
$commandHandlerDriver->registerCommands(
    commandFqn: PlayAlarmCommand::class,
    commandHandler: new PlayAlarmCommandHandler()
);
$commandBus = new CommandBus(
    commandHandlerDriver: $commandHandlerDriver,
    middlewares: new CommandLoggerMiddleware(
        nextMiddleware: new AlarmLogMiddleware()
    )
);
// Configure event bus
$domainEventHandlerDriver = new DomainEventHandlerDriver();
$domainEventHandlerDriver->registerEvent(
    domainEventFqn: DotHourReachedDomainEvent::class,
    domainEventHandler: new ShowDisplayTimeWhenDotHourHasReached()
);
$domainEventHandlerDriver->registerEvent(
    domainEventFqn: DotHourReachedDomainEvent::class,
    domainEventHandler: new PlayBeepWhenDotHourHasReached()
);
$domainEventHandlerDriver->registerEvent(
    domainEventFqn: AwakeHourReachedDomainEvent::class,
    domainEventHandler: new PlayAlarmWhenAwakeHourHasReached($commandBus)
);
$eventBus = new DomainEventBus(
    domainEventHandlerDriver: $domainEventHandlerDriver,
    middlewares: new CommandLoggerMiddleware(
        nextMiddleware: new AlarmLogMiddleware()
    )
);
// Run clock
$runClock = new RunClock(
    bus: $eventBus,
    awakeAt: 7,
    sleepAt: 22
);
($runClock)();
